package main.game_states;

import java.awt.Graphics;
import java.util.ArrayList;

import main.input.KeyInputDevice;
import main.input.MouseInputDevice;

public class GameStateManager {
	
	int currentState;
	ArrayList<GameState> gameStates;
	boolean[] hasInit;
	String playerType = "Mage";
	
	public void initGameStates(){
		gameStates = new ArrayList<GameState>();
		gameStates.add(new Gameplay_State());
		gameStates.add(new Dungeon1_State());
		gameStates.add(new Dungeon2_State());
		gameStates.add(new Dungeon3_State());
		gameStates.add(new Win_State());
		gameStates.add(new Death_State());
		
		hasInit = new boolean[gameStates.size()];
		for(int i = 0; i < hasInit.length; i++){
			hasInit[i] = false;
		}
	}
	
	public void setState(int state, boolean resetFull){
		currentState = state;
		if(!hasInit[currentState]){
			init();
			hasInit[currentState] = true;
		}else{
			for(int i = 0; i < gameStates.size(); i++){
				if(hasInit[i]){
					gameStates.get(i).reset(resetFull);
				}
			}
		}
	}	
	
	public void init(){
		gameStates.get(currentState).setPlayerType(playerType);
		gameStates.get(currentState).init();
	}
	
	public void render(Graphics g){
		gameStates.get(currentState).render(g);
	}
	
	public void tick(){
		gameStates.get(currentState).tick();
		if(currentState == GameState.PLAYERCLASSSELECT_STATE){
			playerType = ((PlayerClassSelect_State) gameStates.get(currentState)).getPlayerClass();
		}
		
		if(gameStates.get(currentState).getSwitchState() > -1){
			if(currentState != GameState.PLAYERCLASSSELECT_STATE){
				setState(gameStates.get(currentState).getSwitchState(), false);
			}else{
				setState(gameStates.get(currentState).getSwitchState(), true);
			}
		}
	}
	
	public void input(KeyInputDevice[] keys, MouseInputDevice[] mousebuttons){
		gameStates.get(currentState).input(keys, mousebuttons);
	}
	
}
